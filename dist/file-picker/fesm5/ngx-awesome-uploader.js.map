{"version":3,"file":"ngx-awesome-uploader.js","sources":["ng://ngx-awesome-uploader/lib/file-picker.service.ts","ng://ngx-awesome-uploader/lib/file-upload.utils.ts","ng://ngx-awesome-uploader/lib/validation-error.model.ts","ng://ngx-awesome-uploader/lib/file-picker.adapter.ts","ng://ngx-awesome-uploader/lib/default-captions.ts","ng://ngx-awesome-uploader/lib/file-picker.component.ts","ng://ngx-awesome-uploader/lib/icons/close-icon/close-icon.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-item/file-preview-item.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-container.component.ts","ng://ngx-awesome-uploader/lib/file-drop/upload-file.model.ts","ng://ngx-awesome-uploader/lib/file-drop/upload-event.model.ts","ng://ngx-awesome-uploader/lib/file-drop/file-drop.component.ts","ng://ngx-awesome-uploader/lib/icons/cloud-icon/cloud-icon.component.ts","ng://ngx-awesome-uploader/lib/file-drop/file-drop.module.ts","ng://ngx-awesome-uploader/lib/file-preview-container/preview-lightbox/preview-lightbox.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.ts","ng://ngx-awesome-uploader/lib/file-picker.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Injectable()\nexport class FilePickerService {\n  constructor(private sanitizer: DomSanitizer) { }\n  mockUploadFile(formData): Observable<any> {\n    const event = new CustomEvent('customevent', {\n      detail: {\n        type: 'UploadProgreess'\n      }\n    });\n    return of (event.detail);\n  }\n  createSafeUrl(file): SafeResourceUrl {\n    if ((<any> window).UPLOADER_TEST_MODE) {return;}\n    try {\n      const url = window.URL.createObjectURL(file);\n    const safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    return safeUrl;\n\n    } catch (er) {\n      console.log(er);\n    }\n  }\n}\n","import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nexport function getFileType(fileExtension: string): string {\n  if (fileExtension.includes('image')) {\n    return 'image';\n  } else if (fileExtension.includes('video')) {\n    return 'video';\n  } else {\n    return 'other';\n  }\n}\n\n","export interface ValidationError {\n  file: File;\n  error: string; // is FileValidationType enum type\n}\nexport enum FileValidationTypes {\n  fileMaxSize = 'FILE_MAX_SIZE',\n  fileMaxCount = 'FILE_MAX_COUNT',\n  totalMaxSize = 'TOTAL_MAX_SIZE',\n  extensions = 'EXTENSIONS',\n  uploadType = 'UPLOAD_TYPE',\n  customValidator = 'CUSTOM_VALIDATOR'\n}\n","import { FilePreviewModel } from './file-preview.model';\nimport { Observable } from 'rxjs';\n\nexport abstract class FilePickerAdapter {\n public abstract uploadFile(fileItem: FilePreviewModel): Observable<number| string>;\n public abstract removeFile(fileItem: FilePreviewModel): Observable<any>;\n}\n","import { UploaderCaptions } from \"./uploader-captions\";\n\nexport const DefaultCaptions: UploaderCaptions = {\n    dropzone: {\n        title: \"Drag and drop file here\",\n        or: \"or\",\n        browse: \"Browse Files\"\n    },\n    cropper: {\n        crop: \"Crop\",\n        cancel: \"Cancel\"\n    },\n    previewCard: {\n        remove: \"Remove\",\n        uploadError: \"Error on upload\"\n    }\n}","import { FilePickerService } from './file-picker.service';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { FilePreviewModel } from './file-preview.model';\nimport { getFileType } from './file-upload.utils';\nimport { FileValidationTypes, ValidationError } from './validation-error.model';\nimport { FilePickerAdapter } from './file-picker.adapter';\nimport {\n  FileSystemDirectoryEntry,\n  FileSystemFileEntry,\n  UploadEvent\n} from './file-drop';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DefaultCaptions } from './default-captions';\nimport { UploaderCaptions } from './uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ndeclare var Cropper;\n@Component({\n  selector: 'ngx-file-picker',\n  templateUrl: './file-picker.component.html',\n  styleUrls: ['./file-picker.component.scss']\n})\nexport class FilePickerComponent implements OnInit, OnDestroy {\n  /** Emitted when file upload via api successfully. Emitted for every file */\n  @Output() uploadSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file upload via api failed. Emitted for every file */\n  @Output() uploadFail = new EventEmitter<HttpErrorResponse>();\n  /** Emitted when file is removed via api successfully. Emitted for every file */\n  @Output() removeSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted on file validation fail */\n  @Output() validationError = new EventEmitter<ValidationError>();\n  /** Emitted when file is added and passed validations. Not uploaded yet */\n  @Output() fileAdded = new EventEmitter<FilePreviewModel>();\n  /** Custom validator function */\n  @Input() customValidator: (file: File) => Observable<boolean>;\n  /** Whether to enable cropper. Default: disabled */\n  @Input()\n  enableCropper = false;\n  /** Whether to show default drag and drop zone. Default:true */\n  @Input() showeDragDropZone = true;\n  /** Whether to show default files preview container. Default: true */\n  @Input() showPreviewContainer = true;\n  /** Preview Item template */\n  @Input() itemTemplate: TemplateRef<any>;\n  /** Single or multiple. Default: multi */\n  @Input()\n  uploadType = 'multi';\n  /** Max size of selected file in MB. Default: no limit */\n  @Input()\n  fileMaxSize: number;\n  /** Max count of file in multi-upload. Default: no limit */\n  @Input()\n  fileMaxCount: number;\n  /** Total Max size limit of all files in MB. Default: no limit */\n  @Input()\n  totalMaxSize: number;\n  /** Which file types to show on choose file dialog. Default: show all */\n  @Input()\n  accept: string;\n  files: FilePreviewModel[] = [];\n  /** File extensions filter */\n  @Input() fileExtensions: String[];\n  cropper: any;\n  /** Cropper options. */\n  @Input() cropperOptions: Object;\n  /** Files array for cropper. Will be shown equentially if crop enabled */\n  filesForCropper: File[] = [];\n  /** Current file to be shown in cropper*/\n  currentCropperFile: File;\n  /** Custom api Adapter for uploading/removing files */\n  @Input()\n  adapter: FilePickerAdapter;\n  /**  Custome template for dropzone */\n  @Input() dropzoneTemplate: TemplateRef<any>;\n  /** Custom captions input. Used for multi language support */\n  @Input() captions: UploaderCaptions;\n  /** captions object*/\n  _captions: UploaderCaptions;\n  cropClosed$ = new Subject<FilePreviewModel>();\n  _onDestroy$ = new Subject<void>();\n  safeCropImgUrl: SafeResourceUrl;\n  constructor(\n    private fileService: FilePickerService,\n    private elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.setCropperOptions();\n    this.listenToCropClose();\n    this.setCaptions();\n  }\n  ngOnDestroy() {\n    this._onDestroy$.next();\n  }\n  setCaptions() {\n    this._captions = this.captions || DefaultCaptions;\n  }\n  /** Listen when Cropper is closed and open new cropper if next image exists */\n  listenToCropClose() {\n    this.cropClosed$\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((res: FilePreviewModel) => {\n        const croppedIndex = this.filesForCropper.findIndex(\n          item => item.name === res.fileName\n        );\n        const nextFile =\n          croppedIndex !== -1\n            ? this.filesForCropper[croppedIndex + 1]\n            : undefined;\n        // console.log(nextFile)\n        //  console.log('cropped', res);\n        this.filesForCropper = [...this.filesForCropper].filter(\n          item => item.name !== res.fileName\n        );\n        // console.log(this.filesForCropper);\n        if (nextFile) {\n          this.openCropper(nextFile);\n        }\n      });\n  }\n  /** Sets custom cropper options if avaiable */\n  setCropperOptions() {\n    if (!this.cropperOptions) {\n      this.setDefaultCropperOptions();\n    }\n  }\n  /** Sets manual cropper options if no custom options are avaiable */\n  setDefaultCropperOptions() {\n    this.cropperOptions = {\n      dragMode: 'crop',\n      aspectRatio: 1,\n      autoCrop: true,\n      movable: true,\n      zoomable: true,\n      scalable: true,\n      autoCropArea: 0.8\n    };\n  }\n  /** On input file selected */\n  onChange(fileInput: HTMLInputElement) {\n    const files: File[] = Array.from(fileInput.files);\n    this.handleFiles(files).subscribe();\n  }\n  /** Handles input and drag/drop files */\n  handleFiles(files: File[]): Observable<void> {\n    if (!this.isValidMaxFileCount(files)) {\n      return of(null);\n    }\n    const isValidUploadSync = files.every(item => this.validateFileSync(item));\n    const asyncFunctions = files.map(item => this.validateFileAsync(item));\n    return combineLatest(...asyncFunctions).pipe(\n      map(res => {\n        const isValidUploadAsync = res.every(result => result === true);\n        if (!isValidUploadSync || !isValidUploadAsync) {\n          return;\n        }\n        files.forEach((file: File, index: number) => {\n          this.handleInputFile(file, index);\n        });\n      })\n    );\n  }\n  /** Validates synchronous validations */\n  validateFileSync(file: File): boolean {\n    if (!file) {\n      return;\n    }\n    if (!this.isValidUploadType(file)) {\n      return;\n    }\n    if (!this.isValidExtension(file, file.name)) {\n      return;\n    }\n    return true;\n  }\n  /** Validates asynchronous validations */\n  validateFileAsync(file: File): Observable<boolean> {\n    if (!this.customValidator) {\n      return of(true);\n    }\n    return this.customValidator(file).pipe(\n      tap(res => {\n        if (!res) {\n          this.validationError.next({\n            file: file,\n            error: FileValidationTypes.customValidator\n          });\n        }\n      })\n    );\n  }\n  /** Handles input and drag&drop files */\n  handleInputFile(file: File, index): void {\n    const type = getFileType(file.type);\n    if (type === 'image' && this.enableCropper) {\n      this.filesForCropper.push(file);\n      if (!this.currentCropperFile) {\n        this.openCropper(file);\n      }\n    } else {\n      /** Size is not initially checked on handleInputFiles because of cropper size change */\n      if (this.isValidSize(file, file.size)) {\n        this.pushFile(file);\n      }\n    }\n  }\n  /** Validates if upload type is single so another file cannot be added */\n  isValidUploadType(file): boolean {\n    if (this.uploadType === 'single' && this.files.length > 0) {\n      this.validationError.next({\n        file: file,\n        error: FileValidationTypes.uploadType\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /** Validates max file count */\n  isValidMaxFileCount(files: File[]): boolean {\n    if (\n      !this.fileMaxCount ||\n      this.fileMaxCount >= this.files.length + files.length\n    ) {\n      return true;\n    } else {\n      this.validationError.next({\n        file: null,\n        error: FileValidationTypes.fileMaxCount\n      });\n      return false;\n    }\n  }\n  /** On file dropped */\n  dropped(event: UploadEvent) {\n    const files = event.files;\n    const filesForUpload: File[] = [];\n    for (const droppedFile of event.files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          filesForUpload.push(file);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n        // console.log(droppedFile.relativePath, fileEntry);\n      }\n    }\n    setTimeout(() => this.handleFiles(filesForUpload).subscribe());\n  }\n  /** Add file to file list after succesfull validation */\n  pushFile(file: File, fileName = file.name): void {\n    this.files.push({ file: file, fileName: fileName });\n    this.fileAdded.next({ file: file, fileName: fileName });\n  }\n  /** Opens cropper for image crop */\n  openCropper(file: File): void {\n    if ((<any>window).UPLOADER_TEST_MODE || typeof Cropper !== 'undefined') {\n      this.safeCropImgUrl = this.fileService.createSafeUrl(file);\n      this.currentCropperFile = file;\n    } else {\n      console.warn(\n        \"please import cropperjs script and styles to use cropper feature or disable it by setting [enableCropper]='false'\"\n      );\n      return;\n    }\n  }\n  getSafeUrl(file: File): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n  /** On img load event */\n  cropperImgLoaded(e): void {\n    const image = document.getElementById('cropper-img');\n    this.cropper = new Cropper(image, this.cropperOptions);\n  }\n  /** Close or cancel cropper */\n  closeCropper(filePreview: FilePreviewModel): void {\n    this.currentCropperFile = undefined;\n    this.cropper = undefined;\n    setTimeout(() => this.cropClosed$.next(filePreview), 200);\n  }\n  /** Removes files from files list */\n  removeFileFromList(file: FilePreviewModel): void {\n    this.files = this.files.filter(f => f !== file);\n  }\n\n  /** Emits event when file upload api returns success  */\n  onUploadSuccess(fileItem: FilePreviewModel): void {\n    this.uploadSuccess.next(fileItem);\n  }\n\n  /** Emits event when file upload api returns success  */\n  onUploadFail(er: HttpErrorResponse): void {\n    this.uploadFail.next(er);\n  }\n\n  /** Validates file extension */\n  isValidExtension(file: File, fileName: string): boolean {\n      if (!this.fileExtensions) {return true; }\n      const extension = fileName.split('.').pop();\n      const fileExtensions = this.fileExtensions.map(ext => ext.toLowerCase());\n      if (fileExtensions.indexOf(extension.toLowerCase()) === -1) {\n        this.validationError.next({file: file, error: FileValidationTypes.extensions});\n        return false;\n      }\n  }\n  /** Validates selected file size and total file size */\n  isValidSize(file: File, size: number): boolean {\n    /** Validating selected file size */\n    const res: number = this.bitsToMb(size.toString());\n    let isValidFileSize: boolean;\n    let isValidTotalFileSize: boolean;\n    if (!this.fileMaxSize || (this.fileMaxSize && res < this.fileMaxSize)) {\n      isValidFileSize = true;\n    } else {\n      this.validationError.next({\n        file: file,\n        error: FileValidationTypes.fileMaxSize\n      });\n    }\n    /** Validating Total Files Size */\n    const totalBits = this.files\n      .map(f => f.file.size)\n      .reduce((acc, curr) => acc + curr, 0);\n    if (\n      !this.totalMaxSize ||\n      (this.totalMaxSize &&\n        this.bitsToMb(totalBits + file.size) < this.totalMaxSize)\n    ) {\n      isValidTotalFileSize = true;\n    } else {\n      this.validationError.next({\n        file: file,\n        error: FileValidationTypes.totalMaxSize\n      });\n    }\n    return !!isValidFileSize && isValidTotalFileSize;\n  }\n  bitsToMb(size): number {\n    return parseFloat(size) / 1048576;\n  }\n  /** when crop button submitted */\n  onCropSubmit(): void {\n    const canvas = this.cropper.getCroppedCanvas();\n    if (canvas != null) {\n      this.cropper.getCroppedCanvas().toBlob(this.blobFallBack.bind(this), 'image/jpeg');\n    }\n  }\n  /** After crop submit */\n  blobFallBack(blob: Blob): void {\n    if (!blob) {\n      return;\n    }\n    if (this.isValidSize(<File>blob, blob.size)) {\n      this.pushFile(<File>blob, this.currentCropperFile.name);\n    }\n    this.closeCropper({\n      file: blob as File,\n      fileName: this.currentCropperFile.name\n    });\n  }\n  removeFile(fileItem: FilePreviewModel): void {\n    if (this.adapter) {\n      this.adapter.removeFile(fileItem).subscribe(res => {\n        this.onRemoveSuccess(fileItem);\n      });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n  /** Emits event when file remove api returns success  */\n  onRemoveSuccess(fileItem: FilePreviewModel): void {\n    this.removeSuccess.next(fileItem);\n    this.removeFileFromList(fileItem);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'close-icon',\n  templateUrl: './close-icon.component.html',\n  styleUrls: ['./close-icon.component.scss']\n})\nexport class CloseIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { FilePickerService } from './../../file-picker.service';\nimport { FilePreviewModel } from './../../file-preview.model';\nimport { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { HttpEvent, HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { getFileType} from '../../file-upload.utils';\nimport {  Subscription } from 'rxjs';\nimport { FilePickerAdapter } from '../../file-picker.adapter';\nimport { UploaderCaptions } from '../../uploader-captions';\n\n@Component({\n  selector: 'file-preview-item',\n  templateUrl: './file-preview-item.component.html',\n  styleUrls: ['./file-preview-item.component.scss']\n})\nexport class FilePreviewItemComponent implements OnInit {\n  @Output() public removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadFail = new EventEmitter<HttpErrorResponse>();\n  @Output() public imageClicked = new EventEmitter<FilePreviewModel>();\n  @Input() public fileItem: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() captions: UploaderCaptions;\n  icon = 'checkmark';\n  uploadProgress: number;\n  fileType: string;\n  safeUrl: SafeResourceUrl;\n  uploadError: boolean;\n  uploadSubscription: Subscription;\n  fileId: string;\n  constructor(\n    private fileService: FilePickerService,\n  ) {}\n\n  ngOnInit() {\n  this.uploadFile(this.fileItem);\n    this.fileType = getFileType(this.fileItem.file.type);\n    this.safeUrl = this.getSafeUrl(this.fileItem.file);\n  }\n  getSafeUrl(file: File | Blob): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n  /** Converts bytes to nice size */\n  niceBytes(x): string {\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let l = 0,\n      n = parseInt(x, 10) || 0;\n    while (n >= 1024 && ++l) {\n      n = n / 1024;\n    }\n    // include a decimal point and a tenths-place digit if presenting\n    // less than ten of KB or greater units\n    return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n  }\n  /** Retry file upload when upload was unsuccessfull */\n  onRetry(): void {\n    this.uploadFile(this.fileItem);\n  }\n  onCheckMarkClick() {\n    this.icon = 'error';\n  }\n  uploadFile(fileItem: FilePreviewModel): void {\n    if (this.adapter) {\n      this.uploadSubscription =\n      this.adapter.uploadFile(fileItem)\n      .subscribe((res: number | string) => {\n        if (typeof res === 'string') {\n          this.onUploadSuccess(res, fileItem);\n          this.uploadProgress = undefined;\n        }\n        if (typeof res === 'number') {\n          this.uploadProgress = res;\n        //  this.handleProgressResponse(<HttpEvent<any>>res, fileItem);\n        }\n      }, (er: HttpErrorResponse) => {\n        this.uploadError = true;\n        this.uploadFail.next(er);\n        this.uploadProgress = undefined;\n  });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n  /** Emits event when file upload api returns success  */\n  onUploadSuccess(id: string, fileItem: FilePreviewModel): void {\n    this.fileId = id;\n    this.fileItem.fileId = id;\n    this.uploadSuccess.next({...fileItem, fileId: id});\n  }\n  handleProgressResponse(event: HttpEvent<any> , fileName) {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        return ;\n\n      case HttpEventType.UploadProgress:\n        // Compute and show the % done:\n        this.uploadProgress = Math.round((100 * event.loaded) / event.total);\n       return;\n\n      case HttpEventType.Response:\n        const body: any = event.body;\n        if (body && body.data) {\n         // this.uploaded.next(res.data.toString());\n        }\n        this.uploadProgress = undefined;\n        return;\n      default:\n        this.uploadProgress = undefined;\n        return `File \"${fileName}\" surprising upload event: ${event.type}.`;\n    }\n  }\n onRemove(fileItem: FilePreviewModel): void {\n  this.uploadUnsubscribe();\n  this.removeFile.next(fileItem);\n }\n /** Cancel upload. Cancels request  */\n uploadUnsubscribe(): void {\n  if (this.uploadSubscription) {\n    this.uploadSubscription.unsubscribe();\n   }\n }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { FilePreviewModel } from '../file-preview.model';\nimport { FilePickerAdapter } from '../file-picker.adapter';\nimport { UploaderCaptions } from '../uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'file-preview-container',\n  templateUrl: './file-preview-container.component.html',\n  styleUrls: ['./file-preview-container.component.scss']\n})\nexport class FilePreviewContainerComponent implements OnInit {\n  @Input() previewFiles: FilePreviewModel[];\n  @Input() itemTemplate: TemplateRef<any>;\n  @Output() public removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadFail = new EventEmitter<HttpErrorResponse>();\n  lightboxFile: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() captions: UploaderCaptions;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  openLightbox(file: FilePreviewModel) {\n   this.lightboxFile = file;\n  }\n  closeLightbox() {\n    this.lightboxFile = undefined;\n  }\n\n}\n","import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\n\n/**\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\n * properties of the given {@link FileSystemEntry}.\n */\nexport class UploadFile {\n    constructor(\n        public relativePath: string,\n        public fileEntry: FileSystemEntry) {\n    }\n}\n","import { UploadFile } from './upload-file.model';\n\nexport class UploadEvent {\n    constructor(\n        public files: UploadFile[]) {\n    }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\n\nimport { UploadFile } from './upload-file.model';\nimport { UploadEvent } from './upload-event.model';\nimport {\n  FileSystemFileEntry,\n  FileSystemEntry,\n  FileSystemDirectoryEntry\n} from './dom.types';\nimport { UploaderCaptions } from '../uploader-captions';\n\n@Component({\n  selector: 'file-drop',\n  templateUrl: './file-drop.component.html',\n  styleUrls: ['./file-drop.component.scss']\n})\nexport class FileComponent implements OnDestroy {\n  @Input()\n  captions: UploaderCaptions;\n  @Input()\n  customstyle: string = null;\n  @Input()\n  disableIf = false;\n\n  @Output()\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<\n    UploadEvent\n  >();\n  @Output()\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\n\n  stack = [];\n  files: UploadFile[] = [];\n  subscription: Subscription;\n  dragoverflag = false;\n\n  globalDisable = false;\n  globalStart: Function;\n  globalEnd: Function;\n\n  numOfActiveReadEntries = 0;\n  constructor(private zone: NgZone, private renderer: Renderer2) {\n    if (!this.customstyle) {\n      this.customstyle = 'drop-zone';\n    }\n    this.globalStart = this.renderer.listen('document', 'dragstart', evt => {\n      this.globalDisable = true;\n    });\n    this.globalEnd = this.renderer.listen('document', 'dragend', evt => {\n      this.globalDisable = false;\n    });\n  }\n  public onDragOver(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (!this.dragoverflag) {\n        this.dragoverflag = true;\n        this.onFileOver.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public onDragLeave(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (this.dragoverflag) {\n        this.dragoverflag = false;\n        this.onFileLeave.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  dropFiles(event: any) {\n    if (!this.globalDisable && !this.disableIf) {\n      this.dragoverflag = false;\n      event.dataTransfer.dropEffect = 'copy';\n      let length;\n      if (event.dataTransfer.items) {\n        length = event.dataTransfer.items.length;\n      } else {\n        length = event.dataTransfer.files.length;\n      }\n\n      for (let i = 0; i < length; i++) {\n        let entry: FileSystemEntry;\n        if (event.dataTransfer.items) {\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\n          }\n        } else {\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\n          }\n        }\n        if (!entry) {\n          const file: File = event.dataTransfer.files[i];\n          if (file) {\n            const fakeFileEntry: FileSystemFileEntry = {\n              name: file.name,\n              isDirectory: false,\n              isFile: true,\n              file: (callback: (filea: File) => void): void => {\n                callback(file);\n              }\n            };\n            const toUpload: UploadFile = new UploadFile(\n              fakeFileEntry.name,\n              fakeFileEntry\n            );\n            this.addToQueue(toUpload);\n          }\n        } else {\n          if (entry.isFile) {\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\n            this.addToQueue(toUpload);\n          } else if (entry.isDirectory) {\n            this.traverseFileTree(entry, entry.name);\n          }\n        }\n      }\n\n      this.preventAndStop(event);\n\n      const timerObservable = timer(200, 200);\n      this.subscription = timerObservable.subscribe(t => {\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\n          this.onFileDrop.emit(new UploadEvent(this.files));\n          this.files = [];\n        }\n      });\n    }\n  }\n\n  private traverseFileTree(item: FileSystemEntry, path: string) {\n    if (item.isFile) {\n      const toUpload: UploadFile = new UploadFile(path, item);\n      this.files.push(toUpload);\n      this.zone.run(() => {\n        this.popToStack();\n      });\n    } else {\n      this.pushToStack(path);\n      path = path + '/';\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\n      let entries = [];\n      const thisObj = this;\n\n      const readEntries = function() {\n        thisObj.numOfActiveReadEntries++;\n        dirReader.readEntries(function(res) {\n          if (!res.length) {\n            // add empty folders\n            if (entries.length === 0) {\n              const toUpload: UploadFile = new UploadFile(path, item);\n              thisObj.zone.run(() => {\n                thisObj.addToQueue(toUpload);\n              });\n            } else {\n              for (let i = 0; i < entries.length; i++) {\n                thisObj.zone.run(() => {\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\n                });\n              }\n            }\n            thisObj.zone.run(() => {\n              thisObj.popToStack();\n            });\n          } else {\n            // continue with the reading\n            entries = entries.concat(res);\n            readEntries();\n          }\n          thisObj.numOfActiveReadEntries--;\n        });\n      };\n\n      readEntries();\n    }\n  }\n\n  private addToQueue(item: UploadFile) {\n    this.files.push(item);\n  }\n\n  pushToStack(str) {\n    this.stack.push(str);\n  }\n\n  popToStack() {\n    const value = this.stack.pop();\n  }\n\n  private clearQueue() {\n    this.files = [];\n  }\n\n  private preventAndStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.globalStart();\n    this.globalEnd();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cloud-icon',\n  templateUrl: './cloud-icon.component.html',\n  styleUrls: ['./cloud-icon.component.scss']\n})\nexport class CloudIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FileComponent} from './file-drop.component';\nimport { CloudIconComponent } from '../icons/cloud-icon/cloud-icon.component';\n\n@NgModule({\n  declarations: [\n    FileComponent,\n    CloudIconComponent\n  ],\n  exports: [FileComponent],\n  imports: [CommonModule],\n  providers: [],\n  bootstrap: [FileComponent],\n})\nexport class FileDropModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FilePreviewModel } from '../../file-preview.model';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'preview-lightbox',\n  templateUrl: './preview-lightbox.component.html',\n  styleUrls: ['./preview-lightbox.component.scss']\n})\nexport class PreviewLightboxComponent implements OnInit {\n  @Input() file: FilePreviewModel;\n  @Output() close = new EventEmitter<void>();\n  loaded: boolean;\n  safeUrl: SafeResourceUrl;\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.getSafeUrl(this.file.file);\n  }\n  getSafeUrl(file: File | Blob): void {\n    const url = window.URL.createObjectURL(file);\n    this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n  onClose(event): void {\n   this.close.next();\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'refresh-icon',\n  templateUrl: './refresh-icon.component.html',\n  styleUrls: ['./refresh-icon.component.scss']\n})\nexport class RefreshIconComponent implements OnInit {\n   @Output() public retry  = new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CloseIconComponent } from './icons/close-icon/close-icon.component';\nimport { FilePreviewItemComponent } from './file-preview-container/file-preview-item/file-preview-item.component';\nimport { FilePreviewContainerComponent } from './file-preview-container/file-preview-container.component';\nimport { NgModule } from '@angular/core';\nimport { FilePickerComponent } from './file-picker.component';\nimport { CommonModule } from '@angular/common';\nimport { FilePickerService } from './file-picker.service';\nimport { FileDropModule } from './file-drop/file-drop.module';\nimport { PreviewLightboxComponent } from './file-preview-container/preview-lightbox/preview-lightbox.component';\nimport { RefreshIconComponent } from './file-preview-container/file-preview-item/refresh-icon/refresh-icon.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FileDropModule,\n  ],\n  declarations: [\n    FilePickerComponent,\n    FilePreviewContainerComponent,\n    FilePreviewItemComponent,\n    PreviewLightboxComponent,\n    RefreshIconComponent,\n    CloseIconComponent\n  ],\n  exports: [FilePickerComponent],\n  providers: [FilePickerService]\n})\nexport class FilePickerModule {}\n"],"names":["tslib_1.__spread","tslib_1.__values"],"mappings":"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"}