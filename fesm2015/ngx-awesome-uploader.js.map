{"version":3,"file":"ngx-awesome-uploader.js","sources":["ng://ngx-awesome-uploader/lib/file-picker.service.ts","ng://ngx-awesome-uploader/lib/file-upload.utils.ts","ng://ngx-awesome-uploader/lib/validation-error.model.ts","ng://ngx-awesome-uploader/lib/file-picker.adapter.ts","ng://ngx-awesome-uploader/lib/default-captions.ts","ng://ngx-awesome-uploader/lib/file-dropping-process.model.ts","ng://ngx-awesome-uploader/lib/cropper-options.model.ts","ng://ngx-awesome-uploader/lib/file-picker.component.ts","ng://ngx-awesome-uploader/lib/icons/close-icon/close-icon.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-item/file-preview-item.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-container.component.ts","ng://ngx-awesome-uploader/lib/file-drop/upload-file.model.ts","ng://ngx-awesome-uploader/lib/file-drop/upload-event.model.ts","ng://ngx-awesome-uploader/lib/file-drop/file-drop.component.ts","ng://ngx-awesome-uploader/lib/icons/cloud-icon/cloud-icon.component.ts","ng://ngx-awesome-uploader/lib/file-drop/file-drop.module.ts","ng://ngx-awesome-uploader/lib/file-preview-container/preview-lightbox/preview-lightbox.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.ts","ng://ngx-awesome-uploader/lib/file-picker.module.ts","ng://ngx-awesome-uploader/lib/file-preview.model.ts","ng://ngx-awesome-uploader/lib/uploader-captions.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Injectable()\nexport class FilePickerService {\n  constructor(private sanitizer: DomSanitizer) { }\n  mockUploadFile(formData): Observable<any> {\n    const event = new CustomEvent('customevent', {\n      detail: {\n        type: 'UploadProgreess'\n      }\n    });\n    return of (event.detail);\n  }\n  createSafeUrl(file): SafeResourceUrl {\n    if ((<any> window).UPLOADER_TEST_MODE) {return;}\n    try {\n      const url = window.URL.createObjectURL(file);\n    const safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    return safeUrl;\n\n    } catch (er) {\n      console.log(er);\n    }\n  }\n}\n","import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nexport function getFileType(fileExtension: string): string {\n  if (fileExtension.includes('image')) {\n    return 'image';\n  } else if (fileExtension.includes('video')) {\n    return 'video';\n  } else {\n    return 'other';\n  }\n}\n\n","export interface ValidationError {\n  file: File;\n  error: string; // is FileValidationType enum type\n}\nexport enum FileValidationTypes {\n  fileMaxSize = 'FILE_MAX_SIZE',\n  fileMaxCount = 'FILE_MAX_COUNT',\n  totalMaxSize = 'TOTAL_MAX_SIZE',\n  extensions = 'EXTENSIONS',\n  uploadType = 'UPLOAD_TYPE',\n  customValidator = 'CUSTOM_VALIDATOR'\n}\n","import { FilePreviewModel } from './file-preview.model';\nimport { Observable } from 'rxjs';\n\nexport abstract class FilePickerAdapter {\n public abstract uploadFile(fileItem: FilePreviewModel): Observable<number| string>;\n public abstract removeFile(fileItem: FilePreviewModel): Observable<any>;\n}\n","import { UploaderCaptions } from \"./uploader-captions\";\n\nexport const DefaultCaptions: UploaderCaptions = {\n    dropzone: {\n        title: \"Drag and drop file here\",\n        or: \"or\",\n        browse: \"Browse Files\"\n    },\n    cropper: {\n        crop: \"Crop\",\n        cancel: \"Cancel\"\n    },\n    previewCard: {\n        remove: \"Remove\",\n        uploadError: \"Error on upload\"\n    }\n}","\nexport class FileDroppingProcessModel {\n  private filesForUpload: File[] = [];\n  private timerCounter = 0;\n  private expectedLength = 0;\n  readonly checkTimeIntervalMS = 100;\n\n  constructor(expectedLength: number, timerCounter: number = 20) {\n    this.expectedLength = expectedLength;\n    this.timerCounter = timerCounter;\n  }\n\n  addFileForUpload(file: File): void {\n    this.filesForUpload.push(file);\n  }\n\n  diminishCounter(): void {\n    this.timerCounter--;\n  }\n\n  isProcessingFinished(): boolean {\n    return this.timerCounter === 0 || this.filesForUpload.length === this.expectedLength;\n  }\n\n  setExpectedLength(length: number): void {\n    this.expectedLength = length;\n  }\n\n  getFiles(): File[] {\n    return this.filesForUpload;\n  }\n}\n","import {ImageTransform} from 'ngx-image-cropper';\n\nexport interface CropperOptions {\n  aspectRatio?: number;\n  maintainAspectRatio?: boolean;\n  resizeToWidth?: number;\n  resizeToHeight?: number;\n  cropperStaticWidth?: number;\n  cropperStaticHeight?: number;\n  cropperMinWidth?: number;\n  cropperMinHeight?: number;\n  initialStepSize?: number;\n  onlyScaleDown?: boolean;\n  roundCropper?: boolean;\n  imageQuality?: number;\n  alignImage?: 'left' | 'center';\n  backgroundColor?: string;\n  hideResizeSquares?: boolean;\n  disabled?: boolean;\n  canvasRotation?: number;\n  transform?: ImageTransform;\n  loadImageFailed?: Function;\n}\n\n\nexport class CropperOptionsModel implements CropperOptions {\n  readonly aspectRatio: number;\n  readonly maintainAspectRatio: boolean;\n  readonly resizeToWidth: number;\n  readonly resizeToHeight: number;\n  readonly cropperStaticWidth: number;\n  readonly cropperStaticHeight: number;\n  readonly cropperMinWidth: number;\n  readonly cropperMinHeight: number;\n  readonly initialStepSize: number;\n  readonly onlyScaleDown: boolean;\n  readonly roundCropper: boolean;\n  readonly imageQuality: number;\n  readonly alignImage: 'left' | 'center';\n  readonly backgroundColor: string;\n  readonly hideResizeSquares: boolean;\n  readonly disabled: boolean;\n  readonly canvasRotation: number;\n  readonly transform: ImageTransform;\n  readonly loadImageFailed: Function;\n\n  constructor({\n      aspectRatio = 1,\n      maintainAspectRatio = true,\n      resizeToWidth = 0,\n      resizeToHeight = 0,\n      cropperStaticWidth = 0,\n      cropperStaticHeight = 0,\n      cropperMinWidth = 0,\n      cropperMinHeight= 0,\n      initialStepSize = 3,\n      onlyScaleDown = false,\n      roundCropper = false,\n      imageQuality = 92,\n      alignImage = 'center',\n      backgroundColor = '',\n      hideResizeSquares = false,\n      disabled = false,\n      canvasRotation = 0,\n      transform = {},\n      loadImageFailed = () => {}\n  }: CropperOptions) {\n      this.aspectRatio = aspectRatio;\n      this.maintainAspectRatio = maintainAspectRatio;\n      this.resizeToWidth = resizeToWidth;\n      this.resizeToHeight = resizeToHeight;\n      this.cropperStaticWidth = cropperStaticWidth;\n      this.cropperStaticHeight = cropperStaticHeight;\n      this.cropperMinWidth = cropperMinWidth;\n      this.cropperMinHeight = cropperMinHeight;\n      this.initialStepSize = initialStepSize;\n      this.onlyScaleDown = onlyScaleDown;\n      this.roundCropper = roundCropper;\n      this.imageQuality = imageQuality;\n      this.alignImage = alignImage;\n      this.backgroundColor = backgroundColor;\n      this.hideResizeSquares = hideResizeSquares;\n      this.disabled = disabled;\n      this.canvasRotation = canvasRotation;\n      this.transform = transform;\n      this.loadImageFailed = loadImageFailed;\n  }\n}\n","import { FilePickerService } from './file-picker.service';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { FilePreviewModel } from './file-preview.model';\nimport { getFileType } from './file-upload.utils';\nimport { FileValidationTypes, ValidationError } from './validation-error.model';\nimport { FilePickerAdapter } from './file-picker.adapter';\nimport {\n  FileSystemDirectoryEntry,\n  FileSystemFileEntry,\n  UploadEvent\n} from './file-drop';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DefaultCaptions } from './default-captions';\nimport { UploaderCaptions } from './uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {base64ToFile, ImageCroppedEvent} from 'ngx-image-cropper';\nimport {FileDroppingProcessModel} from './file-dropping-process.model';\nimport {CropperOptions, CropperOptionsModel} from './cropper-options.model';\n\n// declare var Cropper;\n@Component({\n  selector: 'ngx-file-picker',\n  templateUrl: './file-picker.component.html',\n  styleUrls: ['./file-picker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePickerComponent implements OnInit, OnDestroy {\n  /** Emitted when file upload via api successfully. Emitted for every file */\n  @Output() uploadSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file upload via api failed. Emitted for every file */\n  @Output() uploadFail = new EventEmitter<HttpErrorResponse>();\n  /** Emitted when file is removed via api successfully. Emitted for every file */\n  @Output() removeSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted on file validation fail */\n  @Output() validationError = new EventEmitter<ValidationError>();\n  /** Emitted when file is added and passed validations. Not uploaded yet */\n  @Output() fileAdded = new EventEmitter<FilePreviewModel>();\n  /** Custom validator function */\n  @Input() customValidator: (file: File) => Observable<boolean>;\n  /** Whether to enable cropper. Default: disabled */\n  @Input()\n  enableCropper = false;\n  /** Whether to show default drag and drop zone. Default:true */\n  @Input() showeDragDropZone = true;\n  /** Whether to show default files preview container. Default: true */\n  @Input() showPreviewContainer = true;\n  /** Preview Item template */\n  @Input() itemTemplate: TemplateRef<any>;\n  /** Single or multiple. Default: multi */\n  @Input()\n  uploadType = 'multi';\n  /** Max size of selected file in MB. Default: no limit */\n  @Input()\n  fileMaxSize: number;\n  /** Max count of file in multi-upload. Default: no limit */\n  @Input()\n  fileMaxCount: number;\n  /** Total Max size limit of all files in MB. Default: no limit */\n  @Input()\n  totalMaxSize: number;\n  /** Which file types to show on choose file dialog. Default: show all */\n  @Input()\n  accept: string;\n  files: FilePreviewModel[] = [];\n  /** File extensions filter */\n  @Input() fileExtensions: String[];\n  cropper: any;\n  /** Cropper options. */\n  @Input() cropperOptions: CropperOptions;\n  /** Files array for cropper. Will be shown equentially if crop enabled */\n  filesForCropper: File[] = [];\n  /** Current file to be shown in cropper*/\n  currentCropperFile: File;\n  /** Custom api Adapter for uploading/removing files */\n  @Input()\n  adapter: FilePickerAdapter;\n  /**  Custome template for dropzone */\n  @Input() dropzoneTemplate: TemplateRef<any>;\n  /** Custom captions input. Used for multi language support */\n  @Input() captions: UploaderCaptions;\n  /** captions object*/\n  _captions: UploaderCaptions;\n  cropClosed$ = new Subject<FilePreviewModel>();\n  _onDestroy$ = new Subject<void>();\n\n  croppedImage: Blob;\n  cropperIsReady = false;\n\n  private droppingProcess: FileDroppingProcessModel;\n\n  constructor(\n    private fileService: FilePickerService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.setCropperOptions();\n    this.listenToCropClose();\n    this.setCaptions();\n  }\n  ngOnDestroy() {\n    this._onDestroy$.next();\n  }\n  setCaptions() {\n    this._captions = this.captions || DefaultCaptions;\n  }\n  /** Listen when Cropper is closed and open new cropper if next image exists */\n  listenToCropClose() {\n    this.cropClosed$\n      // .pipe(takeUntil(this._onDestroy$))\n      .subscribe((res: FilePreviewModel) => {\n        const croppedIndex = this.filesForCropper.findIndex(\n          item => item.name === res.fileName\n        );\n        const nextFile =\n          croppedIndex !== -1\n            ? this.filesForCropper[croppedIndex + 1]\n            : undefined;\n        //  console.log('cropped', res);\n        this.filesForCropper = [...this.filesForCropper].filter(\n          item => item.name !== res.fileName\n        );\n        // console.log(this.filesForCropper);\n        if (nextFile) {\n          this.openCropper(nextFile);\n        }\n      });\n  }\n\n  /** Sets custom cropper options if avaiable */\n  setCropperOptions() {\n    this.cropperOptions = this.cropperOptions === undefined ? new CropperOptionsModel({}) : new CropperOptionsModel(this.cropperOptions);\n  }\n\n  /** On input file selected */\n  onChange(fileInput: HTMLInputElement) {\n    const files: File[] = Array.from(fileInput.files);\n    this.handleFiles(files).subscribe();\n  }\n\n  /** Handles input and drag/drop files */\n  handleFiles(files: File[]): Observable<void> {\n    if (!this.isValidMaxFileCount(files)) {\n      return of(null);\n    }\n    const isValidUploadSync = files.every(item => this.validateFileSync(item));\n    const asyncFunctions = files.map(item => this.validateFileAsync(item));\n\n    return combineLatest(...asyncFunctions).pipe(\n      map(res => {\n        const isValidUploadAsync = res.every(result => result === true);\n        if (!isValidUploadSync || !isValidUploadAsync) {\n          return;\n        }\n        files.forEach((file: File, index: number) => {\n          this.handleInputFile(file, index);\n        });\n      })\n    );\n  }\n  /** Validates synchronous validations */\n  validateFileSync(file: File): boolean {\n    if (!file) {\n      return;\n    }\n    if (!this.isValidUploadType(file)) {\n      return;\n    }\n    if (!this.isValidExtension(file, file.name)) {\n      return;\n    }\n    return true;\n  }\n  /** Validates asynchronous validations */\n  validateFileAsync(file: File): Observable<boolean> {\n    if (!this.customValidator) {\n      return of(true);\n    }\n    return this.customValidator(file).pipe(\n      tap(res => {\n        if (!res) {\n          this.validationError.next({\n            file: file,\n            error: FileValidationTypes.customValidator\n          });\n        }\n      })\n    );\n  }\n  /** Handles input and drag&drop files */\n  handleInputFile(file: File, index): void {\n    const type = getFileType(file.type);\n    if (type === 'image' && this.enableCropper) {\n      this.filesForCropper.push(file);\n      if (!this.currentCropperFile) {\n        this.openCropper(file);\n        this.ref.detectChanges();\n      }\n    } else {\n      /** Size is not initially checked on handleInputFiles because of cropper size change */\n      if (this.isValidSize(file, file.size)) {\n        this.pushFile(file);\n      }\n    }\n  }\n  /** Validates if upload type is single so another file cannot be added */\n  isValidUploadType(file): boolean {\n    if (this.uploadType === 'single' && this.files.length > 0) {\n      this.validationError.next({\n        file: file,\n        error: FileValidationTypes.uploadType\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /** Validates max file count */\n  isValidMaxFileCount(files: File[]): boolean {\n    if (\n      !this.fileMaxCount ||\n      this.fileMaxCount >= this.files.length + files.length\n    ) {\n      return true;\n    } else {\n      this.validationError.next({\n        file: null,\n        error: FileValidationTypes.fileMaxCount\n      });\n      return false;\n    }\n  }\n  /** On file dropped */\n  dropped(event: UploadEvent) {\n    this.droppingProcess = new FileDroppingProcessModel(event.files.length);\n\n    for (const droppedFile of event.files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          this.droppingProcess.addFileForUpload(file);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n        // console.log(droppedFile.relativePath, fileEntry);\n      }\n    }\n    this.handleFilesIfDroppingProcessIsFinished();\n  }\n\n  /** Add file to file list after succesfull validation */\n  pushFile(file: File, fileName = file.name): void {\n    this.files.push({ file: file, fileName: fileName });\n    this.fileAdded.next({ file: file, fileName: fileName });\n  }\n\n  /** Opens cropper for image crop */\n  openCropper(file: File): void {\n    this.currentCropperFile = file;\n  }\n\n  getSafeUrl(file: File): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n\n  /** Close or cancel cropper */\n  closeCropper(filePreview: FilePreviewModel): void {\n    this.currentCropperFile = undefined;\n    this.cropperIsReady = false;\n    this.cropClosed$.next(filePreview);\n  }\n  /** Removes files from files list */\n  removeFileFromList(file: FilePreviewModel): void {\n    this.files = this.files.filter(f => f !== file);\n  }\n\n  /** Emits event when file upload api returns success  */\n  onUploadSuccess(fileItem: FilePreviewModel): void {\n    this.uploadSuccess.next(fileItem);\n  }\n\n  /** Emits event when file upload api returns failure  */\n  onUploadFail(er: HttpErrorResponse): void {\n    this.uploadFail.next(er);\n  }\n\n  /** Validates file extension */\n  isValidExtension(file: File, fileName: string): boolean {\n      if (!this.fileExtensions) {return true; }\n      const extension = fileName.split('.').pop();\n      const fileExtensions = this.fileExtensions.map(ext => ext.toLowerCase());\n      if (fileExtensions.indexOf(extension.toLowerCase()) === -1) {\n        this.validationError.next({file: file, error: FileValidationTypes.extensions});\n        return false;\n      }\n\n      return true;\n  }\n  /** Validates selected file size and total file size */\n  isValidSize(file: File, size: number): boolean {\n    /** Validating selected file size */\n    const res: number = this.bitsToMb(size.toString());\n    let isValidFileSize: boolean;\n    let isValidTotalFileSize: boolean;\n    if (!this.fileMaxSize || (this.fileMaxSize && res < this.fileMaxSize)) {\n      isValidFileSize = true;\n    } else {\n      this.validationError.next({\n        file: file,\n        error: FileValidationTypes.fileMaxSize\n      });\n    }\n    /** Validating Total Files Size */\n    const totalBits = this.files\n      .map(f => f.file.size)\n      .reduce((acc, curr) => acc + curr, 0);\n    if (\n      !this.totalMaxSize ||\n      (this.totalMaxSize &&\n        this.bitsToMb(totalBits + file.size) < this.totalMaxSize)\n    ) {\n      isValidTotalFileSize = true;\n    } else {\n      this.validationError.next({\n        file: file,\n        error: FileValidationTypes.totalMaxSize\n      });\n    }\n    return !!isValidFileSize && isValidTotalFileSize;\n  }\n  bitsToMb(size): number {\n    return parseFloat(size) / 1048576;\n  }\n  /** when crop button submitted */\n  onCropSubmit(): void {\n    this.blobFallBack(this.croppedImage);\n  }\n  /** After crop submit */\n  blobFallBack(blob: Blob): void {\n    if (!blob) {\n      return;\n    }\n    if (this.isValidSize(<File>blob, blob.size)) {\n      this.pushFile(<File>blob, this.currentCropperFile.name);\n    }\n    this.closeCropper({\n      file: blob as File,\n      fileName: this.currentCropperFile.name\n    });\n  }\n\n  removeFile(fileItem: FilePreviewModel): void {\n    if (this.adapter) {\n      this.adapter.removeFile(fileItem).subscribe(res => {\n        this.onRemoveSuccess(fileItem);\n      });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n  /** Emits event when file remove api returns success  */\n  onRemoveSuccess(fileItem: FilePreviewModel): void {\n    this.removeSuccess.next(fileItem);\n    this.removeFileFromList(fileItem);\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = base64ToFile(event.base64);\n  }\n\n  imageLoaded() {\n    this.cropperIsReady = true;\n  }\n\n  loadImageFailed() {\n    console.log('Load Image Failed');\n    this.closeCropper({\n      file: this.currentCropperFile,\n      fileName: this.currentCropperFile.name\n    });\n    if (this.cropperOptions.loadImageFailed instanceof Function) {\n      this.cropperOptions.loadImageFailed();\n    }\n  }\n\n  private handleFilesIfDroppingProcessIsFinished() {\n    this.droppingProcess.diminishCounter();\n    if (this.droppingProcess.isProcessingFinished()) {\n      this.handleFiles(this.droppingProcess.getFiles()).subscribe();\n    } else {\n      setTimeout(() => {\n        this.handleFilesIfDroppingProcessIsFinished();\n      }, this.droppingProcess.checkTimeIntervalMS);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'close-icon',\n  templateUrl: './close-icon.component.html',\n  styleUrls: ['./close-icon.component.scss']\n})\nexport class CloseIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { FilePickerService } from './../../file-picker.service';\nimport { FilePreviewModel } from './../../file-preview.model';\nimport { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { HttpEvent, HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { getFileType} from '../../file-upload.utils';\nimport {  Subscription } from 'rxjs';\nimport { FilePickerAdapter } from '../../file-picker.adapter';\nimport { UploaderCaptions } from '../../uploader-captions';\n\n@Component({\n  selector: 'file-preview-item',\n  templateUrl: './file-preview-item.component.html',\n  styleUrls: ['./file-preview-item.component.scss']\n})\nexport class FilePreviewItemComponent implements OnInit {\n  @Output() public removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadFail = new EventEmitter<HttpErrorResponse>();\n  @Output() public imageClicked = new EventEmitter<FilePreviewModel>();\n  @Input() public fileItem: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() captions: UploaderCaptions;\n  icon = 'checkmark';\n  uploadProgress: number;\n  fileType: string;\n  safeUrl: SafeResourceUrl;\n  uploadError: boolean;\n  uploadSubscription: Subscription;\n  fileId: string;\n  constructor(\n    private fileService: FilePickerService,\n  ) {}\n\n  ngOnInit() {\n  this.uploadFile(this.fileItem);\n    this.fileType = getFileType(this.fileItem.file.type);\n    this.safeUrl = this.getSafeUrl(this.fileItem.file);\n  }\n  getSafeUrl(file: File | Blob): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n  /** Converts bytes to nice size */\n  niceBytes(x): string {\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let l = 0,\n      n = parseInt(x, 10) || 0;\n    while (n >= 1024 && ++l) {\n      n = n / 1024;\n    }\n    // include a decimal point and a tenths-place digit if presenting\n    // less than ten of KB or greater units\n    return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n  }\n  /** Retry file upload when upload was unsuccessfull */\n  onRetry(): void {\n    this.uploadFile(this.fileItem);\n  }\n  onCheckMarkClick() {\n    this.icon = 'error';\n  }\n  uploadFile(fileItem: FilePreviewModel): void {\n    if (this.adapter) {\n      this.uploadSubscription =\n      this.adapter.uploadFile(fileItem)\n      .subscribe((res: number | string) => {\n        if (typeof res === 'string') {\n          this.onUploadSuccess(res, fileItem);\n          this.uploadProgress = undefined;\n        }\n        if (typeof res === 'number') {\n          this.uploadProgress = res;\n        //  this.handleProgressResponse(<HttpEvent<any>>res, fileItem);\n        }\n      }, (er: HttpErrorResponse) => {\n        this.uploadError = true;\n        this.uploadFail.next(er);\n        this.uploadProgress = undefined;\n  });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n  /** Emits event when file upload api returns success  */\n  onUploadSuccess(id: string, fileItem: FilePreviewModel): void {\n    this.fileId = id;\n    this.fileItem.fileId = id;\n    this.uploadSuccess.next({...fileItem, fileId: id});\n  }\n  handleProgressResponse(event: HttpEvent<any> , fileName) {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        return ;\n\n      case HttpEventType.UploadProgress:\n        // Compute and show the % done:\n        this.uploadProgress = Math.round((100 * event.loaded) / event.total);\n       return;\n\n      case HttpEventType.Response:\n        const body: any = event.body;\n        if (body && body.data) {\n         // this.uploaded.next(res.data.toString());\n        }\n        this.uploadProgress = undefined;\n        return;\n      default:\n        this.uploadProgress = undefined;\n        return `File \"${fileName}\" surprising upload event: ${event.type}.`;\n    }\n  }\n onRemove(fileItem: FilePreviewModel): void {\n  this.uploadUnsubscribe();\n  this.removeFile.next(fileItem);\n }\n /** Cancel upload. Cancels request  */\n uploadUnsubscribe(): void {\n  if (this.uploadSubscription) {\n    this.uploadSubscription.unsubscribe();\n   }\n }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { FilePreviewModel } from '../file-preview.model';\nimport { FilePickerAdapter } from '../file-picker.adapter';\nimport { UploaderCaptions } from '../uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'file-preview-container',\n  templateUrl: './file-preview-container.component.html',\n  styleUrls: ['./file-preview-container.component.scss']\n})\nexport class FilePreviewContainerComponent implements OnInit {\n  @Input() previewFiles: FilePreviewModel[];\n  @Input() itemTemplate: TemplateRef<any>;\n  @Output() public removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public uploadFail = new EventEmitter<HttpErrorResponse>();\n  lightboxFile: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() captions: UploaderCaptions;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  openLightbox(file: FilePreviewModel) {\n   this.lightboxFile = file;\n  }\n  closeLightbox() {\n    this.lightboxFile = undefined;\n  }\n\n}\n","import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\n\n/**\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\n * properties of the given {@link FileSystemEntry}.\n */\nexport class UploadFile {\n    constructor(\n        public relativePath: string,\n        public fileEntry: FileSystemEntry) {\n    }\n}\n","import { UploadFile } from './upload-file.model';\n\nexport class UploadEvent {\n    constructor(\n        public files: UploadFile[]) {\n    }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\n\nimport { UploadFile } from './upload-file.model';\nimport { UploadEvent } from './upload-event.model';\nimport {\n  FileSystemFileEntry,\n  FileSystemEntry,\n  FileSystemDirectoryEntry\n} from './dom.types';\nimport { UploaderCaptions } from '../uploader-captions';\n\n@Component({\n  selector: 'file-drop',\n  templateUrl: './file-drop.component.html',\n  styleUrls: ['./file-drop.component.scss']\n})\nexport class FileComponent implements OnDestroy {\n  @Input()\n  captions: UploaderCaptions;\n  @Input()\n  customstyle: string = null;\n  @Input()\n  disableIf = false;\n\n  @Output()\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<\n    UploadEvent\n  >();\n  @Output()\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\n\n  stack = [];\n  files: UploadFile[] = [];\n  subscription: Subscription;\n  dragoverflag = false;\n\n  globalDisable = false;\n  globalStart: Function;\n  globalEnd: Function;\n\n  numOfActiveReadEntries = 0;\n  constructor(private zone: NgZone, private renderer: Renderer2) {\n    if (!this.customstyle) {\n      this.customstyle = 'drop-zone';\n    }\n    this.globalStart = this.renderer.listen('document', 'dragstart', evt => {\n      this.globalDisable = true;\n    });\n    this.globalEnd = this.renderer.listen('document', 'dragend', evt => {\n      this.globalDisable = false;\n    });\n  }\n  public onDragOver(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (!this.dragoverflag) {\n        this.dragoverflag = true;\n        this.onFileOver.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public onDragLeave(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (this.dragoverflag) {\n        this.dragoverflag = false;\n        this.onFileLeave.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  dropFiles(event: any) {\n    if (!this.globalDisable && !this.disableIf) {\n      this.dragoverflag = false;\n      event.dataTransfer.dropEffect = 'copy';\n      let length;\n      if (event.dataTransfer.items) {\n        length = event.dataTransfer.items.length;\n      } else {\n        length = event.dataTransfer.files.length;\n      }\n\n      for (let i = 0; i < length; i++) {\n        let entry: FileSystemEntry;\n        if (event.dataTransfer.items) {\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\n          }\n        } else {\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\n          }\n        }\n        if (!entry) {\n          const file: File = event.dataTransfer.files[i];\n          if (file) {\n            const fakeFileEntry: FileSystemFileEntry = {\n              name: file.name,\n              isDirectory: false,\n              isFile: true,\n              file: (callback: (filea: File) => void): void => {\n                callback(file);\n              }\n            };\n            const toUpload: UploadFile = new UploadFile(\n              fakeFileEntry.name,\n              fakeFileEntry\n            );\n            this.addToQueue(toUpload);\n          }\n        } else {\n          if (entry.isFile) {\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\n            this.addToQueue(toUpload);\n          } else if (entry.isDirectory) {\n            this.traverseFileTree(entry, entry.name);\n          }\n        }\n      }\n\n      this.preventAndStop(event);\n\n      const timerObservable = timer(200, 200);\n      this.subscription = timerObservable.subscribe(t => {\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\n          this.onFileDrop.emit(new UploadEvent(this.files));\n          this.files = [];\n        }\n      });\n    }\n  }\n\n  private traverseFileTree(item: FileSystemEntry, path: string) {\n    if (item.isFile) {\n      const toUpload: UploadFile = new UploadFile(path, item);\n      this.files.push(toUpload);\n      this.zone.run(() => {\n        this.popToStack();\n      });\n    } else {\n      this.pushToStack(path);\n      path = path + '/';\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\n      let entries = [];\n      const thisObj = this;\n\n      const readEntries = function() {\n        thisObj.numOfActiveReadEntries++;\n        dirReader.readEntries(function(res) {\n          if (!res.length) {\n            // add empty folders\n            if (entries.length === 0) {\n              const toUpload: UploadFile = new UploadFile(path, item);\n              thisObj.zone.run(() => {\n                thisObj.addToQueue(toUpload);\n              });\n            } else {\n              for (let i = 0; i < entries.length; i++) {\n                thisObj.zone.run(() => {\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\n                });\n              }\n            }\n            thisObj.zone.run(() => {\n              thisObj.popToStack();\n            });\n          } else {\n            // continue with the reading\n            entries = entries.concat(res);\n            readEntries();\n          }\n          thisObj.numOfActiveReadEntries--;\n        });\n      };\n\n      readEntries();\n    }\n  }\n\n  private addToQueue(item: UploadFile) {\n    this.files.push(item);\n  }\n\n  pushToStack(str) {\n    this.stack.push(str);\n  }\n\n  popToStack() {\n    const value = this.stack.pop();\n  }\n\n  private clearQueue() {\n    this.files = [];\n  }\n\n  private preventAndStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.globalStart();\n    this.globalEnd();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cloud-icon',\n  templateUrl: './cloud-icon.component.html',\n  styleUrls: ['./cloud-icon.component.scss']\n})\nexport class CloudIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FileComponent} from './file-drop.component';\nimport { CloudIconComponent } from '../icons/cloud-icon/cloud-icon.component';\n\n@NgModule({\n  declarations: [\n    FileComponent,\n    CloudIconComponent\n  ],\n  exports: [FileComponent],\n  imports: [CommonModule],\n  providers: [],\n  bootstrap: [FileComponent],\n})\nexport class FileDropModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FilePreviewModel } from '../../file-preview.model';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'preview-lightbox',\n  templateUrl: './preview-lightbox.component.html',\n  styleUrls: ['./preview-lightbox.component.scss']\n})\nexport class PreviewLightboxComponent implements OnInit {\n  @Input() file: FilePreviewModel;\n  @Output() close = new EventEmitter<void>();\n  loaded: boolean;\n  safeUrl: SafeResourceUrl;\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.getSafeUrl(this.file.file);\n  }\n  getSafeUrl(file: File | Blob): void {\n    const url = window.URL.createObjectURL(file);\n    this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n  onClose(event): void {\n   this.close.next();\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'refresh-icon',\n  templateUrl: './refresh-icon.component.html',\n  styleUrls: ['./refresh-icon.component.scss']\n})\nexport class RefreshIconComponent implements OnInit {\n   @Output() public retry  = new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CloseIconComponent } from './icons/close-icon/close-icon.component';\nimport { FilePreviewItemComponent } from './file-preview-container/file-preview-item/file-preview-item.component';\nimport { FilePreviewContainerComponent } from './file-preview-container/file-preview-container.component';\nimport { NgModule } from '@angular/core';\nimport { FilePickerComponent } from './file-picker.component';\nimport { CommonModule } from '@angular/common';\nimport { FilePickerService } from './file-picker.service';\nimport { FileDropModule } from './file-drop/file-drop.module';\nimport { PreviewLightboxComponent } from './file-preview-container/preview-lightbox/preview-lightbox.component';\nimport { RefreshIconComponent } from './file-preview-container/file-preview-item/refresh-icon/refresh-icon.component';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FileDropModule,\n    ImageCropperModule\n  ],\n  declarations: [\n    FilePickerComponent,\n    FilePreviewContainerComponent,\n    FilePreviewItemComponent,\n    PreviewLightboxComponent,\n    RefreshIconComponent,\n    CloseIconComponent\n  ],\n  exports: [FilePickerComponent],\n  providers: [FilePickerService]\n})\nexport class FilePickerModule {}\n","export interface FilePreviewModel {\n  fileId?: string;\n  file: File | Blob;\n  fileName: string;\n}\n","export interface UploaderCaptions {\n    dropzone: {\n        title: string;\n        or: string;\n        browse: string;\n    };\n    cropper: {\n        crop: string;\n        cancel: string;\n    };\n    previewCard: {\n        remove: string;\n        uploadError: string;\n    }\n}"],"names":[],"mappings":"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"}